{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "plugins": ["import", "react", "jest", "eslint-comments"],
  "env": {
    "browser": true,
    "commonjs": true,
    "node": true,
    "jest/globals": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 8,
    "project": "./tsconfig.json"
  },
  "parser": "@typescript-eslint/parser",
  "rules": {
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": ["function"],
        "format": ["PascalCase", "camelCase"]
      },
      {
        "selector": "variable",
        "format": ["PascalCase", "camelCase", "UPPER_CASE"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "are", "should", "has", "do", "can", "did", "will"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      },
      {
        "selector": [
          "classProperty",
          "objectLiteralProperty",
          "typeProperty",
          "classMethod",
          "objectLiteralMethod",
          "typeMethod",
          "accessor",
          "enumMember"
        ],
        "format": null,
        "modifiers": ["requiresQuotes"]
      }
    ],
    "no-console": "warn",
    "no-debugger": "error",
    "require-yield": "error",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "jest/no-disabled-tests": "error",
    "jest/no-focused-tests": "error",
    "jest/no-identical-title": "error",
    "jest/valid-expect": "off",
    "jest/valid-expect-in-promise": "off",
    "jest/expect-expect": "off",
    "no-useless-return": "error",
    "no-return-await": "error",
    "no-with": "error",
    "require-await": "error",
    "yoda": "error",
    "no-new": "error",
    "no-loop-func": "error",
    "array-callback-return": "error",
    "dot-notation": "error",
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "no-alert": "error",
    "prefer-rest-params": "error",
    "prefer-template": "error",
    "prefer-spread": "error",
    "prefer-destructuring": "error",
    "prefer-const": "error",
    "prefer-arrow-callback": "error",
    "no-var": "error",
    "no-duplicate-imports": "error",
    "no-useless-rename": "error",
    "object-shorthand": "error",
    "@typescript-eslint/no-var-requires": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "warn",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-empty-function": "off",
    "eslint-comments/disable-enable-pair": ["error", { "allowWholeFile": true }],
    "eslint-comments/no-unused-disable": "error",
    "import/order": ["error", { "newlines-between": "always", "alphabetize": { "order": "asc" } }],
  },
  "globals": {
    "console": false,
    "process": false,
    "IS_PRODUCTION": false,
    "IS_DEVELOPMENT": false,
    "check": true,
    "gen": true
  }
}